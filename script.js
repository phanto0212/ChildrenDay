// T·∫≠p h·ª£p love ƒë∆∞·ª£c ch·∫°m
const loveTaps = new Set();
// Thi·∫øt l·∫≠p t√™n m·∫∑c ƒë·ªãnh
let userName = 'My'; // Thay "B√© Iuu" b·∫±ng t√™n b·∫°n mu·ªën s·ª≠ d·ª•ng

function startApp() {
  const stageIds = ['cardStage', 'startStage', 'inputStage', 'loveStage'];
  const stages = Object.fromEntries(stageIds.map(id => [id, document.getElementById(id)]));

  if (Object.values(stages).some(stage => !stage)) {
    console.error('Thi·∫øu m·ªôt trong c√°c element stage!');
    return;
  }

  // Chuy·ªÉn tr·ª±c ti·∫øp t·ª´ startStage sang loveStage, b·ªè qua inputStage
  stages.startStage.style.display = 'none';
  stages.loveStage.style.display = 'block';
  stages.cardStage.style.display = 'none';

  document.getElementById('bgMusic')?.play().catch(err =>
    console.warn('Kh√¥ng th·ªÉ ph√°t nh·∫°c:', err)
  );

  // Kh·ªüi t·∫°o tr·∫°ng th√°i ban ƒë·∫ßu
  resetLoveIcons();
}

// H√†m reset c√°c icon tim
function resetLoveIcons() {
  loveTaps.clear();
  document.querySelectorAll('.love-icon').forEach(icon =>
    icon.classList.remove('tapped')
  );
}

// Hi·ªáu ·ª©ng g√µ ch·ªØ
typeWriterEffect = (text, elementId, callback) => {
  const element = document.getElementById(elementId);
  if (!element) {
    console.error(`Kh√¥ng t√¨m th·∫•y element v·ªõi ID: ${elementId}`);
    return;
  }

  let i = 0;
  const speed = 50;
  element.textContent = '';

  const type = () => {
    if (i < text.length) {
      element.textContent += text.charAt(i);
      i++;
      setTimeout(type, speed);
    } else {
      console.log('Hi·ªáu ·ª©ng g√µ ho√†n t·∫•t');
      callback?.();
    }
  };

  type();
};

function switchStage(fromId, toId, withFade = false) {
  const fromElement = document.getElementById(fromId);
  const toElement = document.getElementById(toId);

  if (!fromElement || !toElement) {
    console.error(`Kh√¥ng t√¨m th·∫•y element: ${fromId} ho·∫∑c ${toId}`);
    return;
  }

  if (withFade) {
    fromElement.classList.add('hidden');
    setTimeout(() => {
      fromElement.style.display = 'none';
      toElement.style.display = 'block';
    }, 1000);
  } else {
    fromElement.style.display = 'none';
    toElement.style.display = 'block';
  }
}

function showConfetti() {
  const duration = 3000;
  const particleCount = 100;
  const colors = ['#ff4081', '#ffb74d', '#64b5f6', '#81c784', '#ba68c8'];
  
  confetti({
    particleCount,
    spread: 100,
    origin: { y: 0.6 },
    colors,
    scalar: 1.2,
  });
  
  // Th√™m m·ªôt ƒë·ª£t confetti n·ªØa sau 500ms
  setTimeout(() => {
    confetti({
      particleCount: particleCount / 2,
      spread: 130,
      origin: { y: 0.7 },
      colors,
      scalar: 0.9,
    });
  }, 500);
}

function tapLove(id) {
  if (loveTaps.has(id)) return;

  const loveIcon = document.querySelector(`#loveIcons .love-icon:nth-child(${id})`);
  loveIcon.classList.add('tapped');
  loveTaps.add(id);
  console.log(`Ch·∫°m love ${id}, t·ªïng: ${loveTaps.size}`);

  if (loveTaps.size === 4) {
    showConfetti(); // Th√™m hi·ªáu ·ª©ng confetti
    
    Swal.fire({
      title: 'ƒê·ªß 4 love r·ªìi n√®!',
      text: 'S·∫µn s√†ng nh·∫≠n qu√† ch∆∞a? üíñ',
      timer: 1500,
      showConfirmButton: false,
      background: '#fffbe7',
      customClass: { title: 'swal-title', content: 'swal-text' }
    }).then(() => {
      switchStage('loveStage', 'cardStage', true);
      
      // Th√™m hi·ªáu ·ª©ng confetti khi hi·ªÉn th·ªã b·∫£ng tin nh·∫Øn
      setTimeout(showConfetti, 1000);

      const loveMsg = document.getElementById('loveMsg');
      if (!loveMsg) return console.error('Kh√¥ng t√¨m th·∫•y element loveMsg!');

      typeWriterEffect(
        `Ch√∫c ${userName} c·ªßa anh m·ªôt ng√†y 1/6 th·∫≠t vui v·∫ª, h·ªìn nhi√™n nh∆∞ m·ªôt ƒë·ª©a tr·∫ª, nh∆∞ng lu√¥n ƒë∆∞·ª£c anh y√™u th∆∞∆°ng nh∆∞ m·ªôt n·ªØ ho√†ng üëë. D√π em c√≥ tr∆∞·ªüng th√†nh ƒë·∫øn ƒë√¢u, th√¨ trong tim anh, em m√£i l√† c√¥ c√¥ng ch√∫a b√© b·ªèng c·∫ßn ƒë∆∞·ª£c anh c∆∞ng chi·ªÅu m·ªói ng√†y!`,
        'loveMsg',
        () => {
          const fromTag = document.createElement("div");
          fromTag.id = 'fromTag';
          fromTag.textContent = "From: Anh C√∫n :))";
          fromTag.style.marginTop = "20px";
          fromTag.style.opacity = "0";
          fromTag.style.transition = "opacity 1s ease";
          loveMsg.appendChild(fromTag);

          setTimeout(() => {
            fromTag.style.opacity = "1";
            // Th√™m m·ªôt ƒë·ª£t confetti nh·ªè n·ªØa khi hi·ªÉn th·ªã ch·ªØ k√Ω
            confetti({
              particleCount: 30,
              spread: 60,
              origin: { y: 0.8 },
              colors: ['#ff4081', '#ffb74d'],
            });
          }, 500);
        }
      );
    });
  }
}

// ƒê√£ lo·∫°i b·ªè h√†m inipesan() v√¨ kh√¥ng c√≤n c·∫ßn thi·∫øt